apiVersion: v1
kind: Service
metadata:
  name: hsof-api
  namespace: hsof
  labels:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: api-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: main-application
  ports:
  - name: api
    port: 80
    targetPort: api
    protocol: TCP
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: hsof-metrics
  namespace: hsof
  labels:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: metrics-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: main-application
  ports:
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: hsof-internal
  namespace: hsof
  labels:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: internal-service
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: main-application
  ports:
  - name: api
    port: 8000
    targetPort: api
    protocol: TCP
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP

---
# Headless service for StatefulSet if needed for clustering
apiVersion: v1
kind: Service
metadata:
  name: hsof-headless
  namespace: hsof
  labels:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: headless-service
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: hsof
    app.kubernetes.io/component: main-application
  ports:
  - name: api
    port: 8000
    targetPort: api
    protocol: TCP
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP